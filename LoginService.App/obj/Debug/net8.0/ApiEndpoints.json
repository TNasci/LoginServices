[
  {
    "ContainingType": "LoginService.App.Controllers.LoginController",
    "Method": "Login",
    "RelativePath": "api/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "login",
        "Type": "LoginService.App.Models.Login",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.App.Controllers.LoginController",
    "Method": "CreateUser",
    "RelativePath": "api/Login/createUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createUser",
        "Type": "LoginService.App.Models.CreateUser",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "LoginService.App.Models.ApplicationUser",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "LoginService.App.Controllers.LoginController",
    "Method": "DeleteUser",
    "RelativePath": "api/Login/deleteUser",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.App.Controllers.LoginController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Login/forgotPasswordUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forgotPassword",
        "Type": "LoginService.App.Models.ForgotPassword",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.App.Controllers.LoginController",
    "Method": "GetUser",
    "RelativePath": "api/Login/getUser",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.App.Controllers.LoginController",
    "Method": "GetUsers",
    "RelativePath": "api/Login/getUsers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[LoginService.App.Models.ApplicationUser, LoginService.App, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "LoginService.App.Controllers.LoginController",
    "Method": "UpdateUser",
    "RelativePath": "api/Login/updateUser",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "updateUser",
        "Type": "LoginService.App.Models.UpdateUser",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.App.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [],
    "EndpointName": "GetWeatherForecast"
  }
]